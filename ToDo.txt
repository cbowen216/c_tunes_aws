restart 1

### TODO List ### 
Set up vs code folders - done
set up virt env - done
Create a gitHub reposiory and connect - done 

set up aws - Done
    set up a AWS EC2 VM - done
    create a private key for c-tunes - done
    set up elastic IP - done
    create IAM role - done
    create ECR (repository) - done
    set up ec2 with -done
        docker - done
        docker compose - done
        aws cli - done
    add postgress security role to EC2 - done
    create a RDS postgress database - done

## connection notes ##
Elastic IP:
13.56.63.45

EC2 Public IPv4 DNS:
ec2-13-56-63-45.us-west-1.compute.amazonaws.com

ECR URI
739505655405.dkr.ecr.us-west-1.amazonaws.com/c_tunes_aws

DB host end point
ctunes-1.cucjg0dw7o5k.us-west-1.rds.amazonaws.com


create a django project - done
create docker compose container - done
upload to AWS - done
Test connection - done

start with artist and users      
    Build schema model - inital build successful just artist and user tables
    finishe the user build out - done
    build list view for artists -done 
    set up template structure  - done
        Base -> app home page -> app Detail page

    complete the db model and build list view - DONE
        albums - Done
        songs - done
        users - songs (many to Many) - Done

    populate with seed data - partial
        artists - Done
        Albums - Done
        Songs - Done

        users songs - 
            - fix the dummy data python file to get the record count and max, min record id for both users and songs.  right now you have to manually look up the user and song key min / max if you rewrote the database this code wiould not work

            - populate with dummy data

    create REST API end points for the following 
        - list all artist / album /songs - Done
        - Add artist / album /songs - Done
        - edit artist
        - list single artist - started
        - Delete all artists

        NO API just web
        - User account view - done
        - create user - done
        - update password - done
        - delete user 
        
        - get list of user songs
        - get list albums for an artist
        - get list songs for an artist
        - list songs on a album 
        - list artist / albums / songs in a full display 

    testing 
        db connections and read write 
        automate push to deploy on aws
